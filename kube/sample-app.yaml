# Sample app backend

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app-backend
  namespace: sample-app
spec:
  selector:
    matchLabels:
      app: sample-app-backend
  template:
    metadata:
      labels:
        app: sample-app-backend
    spec:
      volumes:
        - name: host-mount
          hostPath:
            path: '/src/sample-app'
      containers:
        - name: sample-app-backend
          imagePullPolicy: IfNotPresent
          image: sample-app-backend:latest
          workingDir: '/src/sample-app/backend'
          volumeMounts:
            - name: host-mount
              mountPath: '/src/sample-app'
          ports:
            - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: sample-app-backend
  namespace: sample-app
spec:
  type: NodePort
  ports:
    - nodePort: 32720
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: sample-app-backend

---
# sample-app frontend

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app-frontend
  namespace: sample-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-app-frontend
  template:
    metadata:
      labels:
        app: sample-app-frontend
    spec:
      volumes:
        - name: host-mount
          hostPath:
            path: '/src/sample-app/frontend/src'
      containers:
        - name: sample-app-frontend
          imagePullPolicy: IfNotPresent
          image: sample-app-frontend:latest
          workingDir: '/src/sample-app/frontend'
           # Disable this when deploying to non-dev environments
          volumeMounts:
            - name: host-mount
              mountPath: '/src/sample-app/frontend/src'
          ports:
            - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: sample-app-frontend
  namespace: sample-app
spec:
  type: NodePort
  ports:
    - nodePort: 32710
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: sample-app-frontend

